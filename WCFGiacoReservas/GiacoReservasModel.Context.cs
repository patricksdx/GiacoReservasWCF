//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFGiacoReservas
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GiacoReservaEntities : DbContext
    {
        public GiacoReservaEntities()
            : base("name=GiacoReservaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Tb_Artista> Tb_Artista { get; set; }
        public virtual DbSet<Tb_Cliente> Tb_Cliente { get; set; }
        public virtual DbSet<Tb_Evento> Tb_Evento { get; set; }
        public virtual DbSet<Tb_EventoPersonal> Tb_EventoPersonal { get; set; }
        public virtual DbSet<Tb_Genero> Tb_Genero { get; set; }
        public virtual DbSet<Tb_Invitados> Tb_Invitados { get; set; }
        public virtual DbSet<Tb_ListaInvitados> Tb_ListaInvitados { get; set; }
        public virtual DbSet<Tb_Personal> Tb_Personal { get; set; }
        public virtual DbSet<Tb_Sala> Tb_Sala { get; set; }
        public virtual DbSet<Tb_TipoEventos> Tb_TipoEventos { get; set; }
        public virtual DbSet<Tb_Ubigeo> Tb_Ubigeo { get; set; }
        public virtual DbSet<Tb_EventoArtista> Tb_EventoArtista { get; set; }
    
        [DbFunction("GiacoReservaEntities", "ufn_obtenerArtistasPorCosto")]
        public virtual IQueryable<ufn_obtenerArtistasPorCosto_Result> ufn_obtenerArtistasPorCosto(Nullable<decimal> costo)
        {
            var costoParameter = costo.HasValue ?
                new ObjectParameter("costo", costo) :
                new ObjectParameter("costo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ufn_obtenerArtistasPorCosto_Result>("[GiacoReservaEntities].[ufn_obtenerArtistasPorCosto](@costo)", costoParameter);
        }
    
        [DbFunction("GiacoReservaEntities", "unf_BuscarDni")]
        public virtual IQueryable<unf_BuscarDni_Result> unf_BuscarDni(string dni)
        {
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<unf_BuscarDni_Result>("[GiacoReservaEntities].[unf_BuscarDni](@dni)", dniParameter);
        }
    
        public virtual ObjectResult<ObtenerDetallesPersonalEvento_Result> ObtenerDetallesPersonalEvento(Nullable<int> idEvento)
        {
            var idEventoParameter = idEvento.HasValue ?
                new ObjectParameter("idEvento", idEvento) :
                new ObjectParameter("idEvento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ObtenerDetallesPersonalEvento_Result>("ObtenerDetallesPersonalEvento", idEventoParameter);
        }
    
        public virtual int spu_ModificarArtista(Nullable<int> artista_id, string nombre_artista, string genero_musical, Nullable<decimal> costo_hora)
        {
            var artista_idParameter = artista_id.HasValue ?
                new ObjectParameter("artista_id", artista_id) :
                new ObjectParameter("artista_id", typeof(int));
    
            var nombre_artistaParameter = nombre_artista != null ?
                new ObjectParameter("nombre_artista", nombre_artista) :
                new ObjectParameter("nombre_artista", typeof(string));
    
            var genero_musicalParameter = genero_musical != null ?
                new ObjectParameter("genero_musical", genero_musical) :
                new ObjectParameter("genero_musical", typeof(string));
    
            var costo_horaParameter = costo_hora.HasValue ?
                new ObjectParameter("costo_hora", costo_hora) :
                new ObjectParameter("costo_hora", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spu_ModificarArtista", artista_idParameter, nombre_artistaParameter, genero_musicalParameter, costo_horaParameter);
        }
    
        public virtual int usp_ActualizaEvento(Nullable<int> evento_id, Nullable<int> sala_id, string tipo_evento, Nullable<System.DateTime> fecha_evento, Nullable<System.TimeSpan> hora_inicio, Nullable<System.TimeSpan> hora_finalizacion)
        {
            var evento_idParameter = evento_id.HasValue ?
                new ObjectParameter("evento_id", evento_id) :
                new ObjectParameter("evento_id", typeof(int));
    
            var sala_idParameter = sala_id.HasValue ?
                new ObjectParameter("sala_id", sala_id) :
                new ObjectParameter("sala_id", typeof(int));
    
            var tipo_eventoParameter = tipo_evento != null ?
                new ObjectParameter("tipo_evento", tipo_evento) :
                new ObjectParameter("tipo_evento", typeof(string));
    
            var fecha_eventoParameter = fecha_evento.HasValue ?
                new ObjectParameter("fecha_evento", fecha_evento) :
                new ObjectParameter("fecha_evento", typeof(System.DateTime));
    
            var hora_inicioParameter = hora_inicio.HasValue ?
                new ObjectParameter("hora_inicio", hora_inicio) :
                new ObjectParameter("hora_inicio", typeof(System.TimeSpan));
    
            var hora_finalizacionParameter = hora_finalizacion.HasValue ?
                new ObjectParameter("hora_finalizacion", hora_finalizacion) :
                new ObjectParameter("hora_finalizacion", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizaEvento", evento_idParameter, sala_idParameter, tipo_eventoParameter, fecha_eventoParameter, hora_inicioParameter, hora_finalizacionParameter);
        }
    
        public virtual ObjectResult<usp_ActualizarCliente_Result> usp_ActualizarCliente(Nullable<int> cliente_id, string nombre, string apellido, string correo_electronico, string direccion, string dni, string telefono, Nullable<int> esEmpresa, string razonSocial, string rUC, Nullable<int> estado, string id_Ubigeo)
        {
            var cliente_idParameter = cliente_id.HasValue ?
                new ObjectParameter("cliente_id", cliente_id) :
                new ObjectParameter("cliente_id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var correo_electronicoParameter = correo_electronico != null ?
                new ObjectParameter("correo_electronico", correo_electronico) :
                new ObjectParameter("correo_electronico", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var dniParameter = dni != null ?
                new ObjectParameter("Dni", dni) :
                new ObjectParameter("Dni", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var esEmpresaParameter = esEmpresa.HasValue ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(int));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var id_UbigeoParameter = id_Ubigeo != null ?
                new ObjectParameter("Id_Ubigeo", id_Ubigeo) :
                new ObjectParameter("Id_Ubigeo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ActualizarCliente_Result>("usp_ActualizarCliente", cliente_idParameter, nombreParameter, apellidoParameter, correo_electronicoParameter, direccionParameter, dniParameter, telefonoParameter, esEmpresaParameter, razonSocialParameter, rUCParameter, estadoParameter, id_UbigeoParameter);
        }
    
        public virtual int usp_ActualizarDuracionShow(Nullable<int> p_evento_id, Nullable<int> p_artista_id, Nullable<int> p_nueva_duracion)
        {
            var p_evento_idParameter = p_evento_id.HasValue ?
                new ObjectParameter("p_evento_id", p_evento_id) :
                new ObjectParameter("p_evento_id", typeof(int));
    
            var p_artista_idParameter = p_artista_id.HasValue ?
                new ObjectParameter("p_artista_id", p_artista_id) :
                new ObjectParameter("p_artista_id", typeof(int));
    
            var p_nueva_duracionParameter = p_nueva_duracion.HasValue ?
                new ObjectParameter("p_nueva_duracion", p_nueva_duracion) :
                new ObjectParameter("p_nueva_duracion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarDuracionShow", p_evento_idParameter, p_artista_idParameter, p_nueva_duracionParameter);
        }
    
        public virtual ObjectResult<usp_ActualizarEvento_Result> usp_ActualizarEvento(Nullable<int> evento_id, string nombre_evento, Nullable<int> sala_id, Nullable<int> tipo_id, Nullable<System.DateTime> fecha_evento, Nullable<System.TimeSpan> hora_inicio, Nullable<System.TimeSpan> hora_finalizacion, Nullable<int> estado, string actualizado_por)
        {
            var evento_idParameter = evento_id.HasValue ?
                new ObjectParameter("evento_id", evento_id) :
                new ObjectParameter("evento_id", typeof(int));
    
            var nombre_eventoParameter = nombre_evento != null ?
                new ObjectParameter("nombre_evento", nombre_evento) :
                new ObjectParameter("nombre_evento", typeof(string));
    
            var sala_idParameter = sala_id.HasValue ?
                new ObjectParameter("sala_id", sala_id) :
                new ObjectParameter("sala_id", typeof(int));
    
            var tipo_idParameter = tipo_id.HasValue ?
                new ObjectParameter("tipo_id", tipo_id) :
                new ObjectParameter("tipo_id", typeof(int));
    
            var fecha_eventoParameter = fecha_evento.HasValue ?
                new ObjectParameter("fecha_evento", fecha_evento) :
                new ObjectParameter("fecha_evento", typeof(System.DateTime));
    
            var hora_inicioParameter = hora_inicio.HasValue ?
                new ObjectParameter("hora_inicio", hora_inicio) :
                new ObjectParameter("hora_inicio", typeof(System.TimeSpan));
    
            var hora_finalizacionParameter = hora_finalizacion.HasValue ?
                new ObjectParameter("hora_finalizacion", hora_finalizacion) :
                new ObjectParameter("hora_finalizacion", typeof(System.TimeSpan));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var actualizado_porParameter = actualizado_por != null ?
                new ObjectParameter("actualizado_por", actualizado_por) :
                new ObjectParameter("actualizado_por", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ActualizarEvento_Result>("usp_ActualizarEvento", evento_idParameter, nombre_eventoParameter, sala_idParameter, tipo_idParameter, fecha_eventoParameter, hora_inicioParameter, hora_finalizacionParameter, estadoParameter, actualizado_porParameter);
        }
    
        public virtual int usp_ActualizarEventoPersonal(Nullable<int> p_evento_id, Nullable<int> p_personal_id, string p_costo_personal)
        {
            var p_evento_idParameter = p_evento_id.HasValue ?
                new ObjectParameter("p_evento_id", p_evento_id) :
                new ObjectParameter("p_evento_id", typeof(int));
    
            var p_personal_idParameter = p_personal_id.HasValue ?
                new ObjectParameter("p_personal_id", p_personal_id) :
                new ObjectParameter("p_personal_id", typeof(int));
    
            var p_costo_personalParameter = p_costo_personal != null ?
                new ObjectParameter("p_costo_personal", p_costo_personal) :
                new ObjectParameter("p_costo_personal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarEventoPersonal", p_evento_idParameter, p_personal_idParameter, p_costo_personalParameter);
        }
    
        public virtual int usp_ActualizarInformacionCliente(Nullable<int> cliente_id, string nombre, string apellido, string correo_electronico, Nullable<System.DateTime> fecha_nacimiento, string direccion, string dni, string telefono)
        {
            var cliente_idParameter = cliente_id.HasValue ?
                new ObjectParameter("cliente_id", cliente_id) :
                new ObjectParameter("cliente_id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var correo_electronicoParameter = correo_electronico != null ?
                new ObjectParameter("correo_electronico", correo_electronico) :
                new ObjectParameter("correo_electronico", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento.HasValue ?
                new ObjectParameter("fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("fecha_nacimiento", typeof(System.DateTime));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var dniParameter = dni != null ?
                new ObjectParameter("Dni", dni) :
                new ObjectParameter("Dni", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizarInformacionCliente", cliente_idParameter, nombreParameter, apellidoParameter, correo_electronicoParameter, fecha_nacimientoParameter, direccionParameter, dniParameter, telefonoParameter);
        }
    
        public virtual ObjectResult<usp_ActualizarPersonal_Result> usp_ActualizarPersonal(Nullable<int> personal_id, string nombre, string apellido, string dni, Nullable<decimal> costo_hora, byte[] foto, string telefono, string correo, Nullable<int> tipo, string actualizadoPor, Nullable<int> estado)
        {
            var personal_idParameter = personal_id.HasValue ?
                new ObjectParameter("personal_id", personal_id) :
                new ObjectParameter("personal_id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            var costo_horaParameter = costo_hora.HasValue ?
                new ObjectParameter("costo_hora", costo_hora) :
                new ObjectParameter("costo_hora", typeof(decimal));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(byte[]));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            var actualizadoPorParameter = actualizadoPor != null ?
                new ObjectParameter("ActualizadoPor", actualizadoPor) :
                new ObjectParameter("ActualizadoPor", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ActualizarPersonal_Result>("usp_ActualizarPersonal", personal_idParameter, nombreParameter, apellidoParameter, dniParameter, costo_horaParameter, fotoParameter, telefonoParameter, correoParameter, tipoParameter, actualizadoPorParameter, estadoParameter);
        }
    
        public virtual int usp_ActualizaSala(Nullable<int> sala_id, Nullable<int> capacidad, string direccion, Nullable<decimal> costo_sala, Nullable<bool> disponibilidad)
        {
            var sala_idParameter = sala_id.HasValue ?
                new ObjectParameter("sala_id", sala_id) :
                new ObjectParameter("sala_id", typeof(int));
    
            var capacidadParameter = capacidad.HasValue ?
                new ObjectParameter("capacidad", capacidad) :
                new ObjectParameter("capacidad", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var costo_salaParameter = costo_sala.HasValue ?
                new ObjectParameter("costo_sala", costo_sala) :
                new ObjectParameter("costo_sala", typeof(decimal));
    
            var disponibilidadParameter = disponibilidad.HasValue ?
                new ObjectParameter("disponibilidad", disponibilidad) :
                new ObjectParameter("disponibilidad", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ActualizaSala", sala_idParameter, capacidadParameter, direccionParameter, costo_salaParameter, disponibilidadParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarArtista_Result> usp_ConsultarArtista(string nombre_artista)
        {
            var nombre_artistaParameter = nombre_artista != null ?
                new ObjectParameter("nombre_artista", nombre_artista) :
                new ObjectParameter("nombre_artista", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarArtista_Result>("usp_ConsultarArtista", nombre_artistaParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarCliente_Result> usp_ConsultarCliente(Nullable<int> cliente_id)
        {
            var cliente_idParameter = cliente_id.HasValue ?
                new ObjectParameter("cliente_id", cliente_id) :
                new ObjectParameter("cliente_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarCliente_Result>("usp_ConsultarCliente", cliente_idParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarClienteEmpresa_Result> usp_ConsultarClienteEmpresa()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarClienteEmpresa_Result>("usp_ConsultarClienteEmpresa");
        }
    
        public virtual ObjectResult<Usp_ConsultarDatosCliente_Result> Usp_ConsultarDatosCliente(Nullable<int> cliente_id)
        {
            var cliente_idParameter = cliente_id.HasValue ?
                new ObjectParameter("cliente_id", cliente_id) :
                new ObjectParameter("cliente_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ConsultarDatosCliente_Result>("Usp_ConsultarDatosCliente", cliente_idParameter);
        }
    
        public virtual ObjectResult<Usp_ConsultarDatosPersonal_Result> Usp_ConsultarDatosPersonal(Nullable<int> personal_id)
        {
            var personal_idParameter = personal_id.HasValue ?
                new ObjectParameter("personal_id", personal_id) :
                new ObjectParameter("personal_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ConsultarDatosPersonal_Result>("Usp_ConsultarDatosPersonal", personal_idParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarEvento_Result> usp_ConsultarEvento(Nullable<int> ecod)
        {
            var ecodParameter = ecod.HasValue ?
                new ObjectParameter("ecod", ecod) :
                new ObjectParameter("ecod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarEvento_Result>("usp_ConsultarEvento", ecodParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarEventoEntreFechas_Result> usp_ConsultarEventoEntreFechas(Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarEventoEntreFechas_Result>("usp_ConsultarEventoEntreFechas", fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarEventoYTipo_Result> usp_ConsultarEventoYTipo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarEventoYTipo_Result>("usp_ConsultarEventoYTipo");
        }
    
        public virtual ObjectResult<Usp_ConsultarInvitadosPorEvento_Result> Usp_ConsultarInvitadosPorEvento(Nullable<int> evento_id)
        {
            var evento_idParameter = evento_id.HasValue ?
                new ObjectParameter("evento_id", evento_id) :
                new ObjectParameter("evento_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ConsultarInvitadosPorEvento_Result>("Usp_ConsultarInvitadosPorEvento", evento_idParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarPersonal_Result> usp_ConsultarPersonal(Nullable<int> personal_id)
        {
            var personal_idParameter = personal_id.HasValue ?
                new ObjectParameter("personal_id", personal_id) :
                new ObjectParameter("personal_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarPersonal_Result>("usp_ConsultarPersonal", personal_idParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarPersonalDni_Result> usp_ConsultarPersonalDni(string dni)
        {
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarPersonalDni_Result>("usp_ConsultarPersonalDni", dniParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarPersonalPorEventoo_Result> usp_ConsultarPersonalPorEventoo(Nullable<int> eventoID)
        {
            var eventoIDParameter = eventoID.HasValue ?
                new ObjectParameter("EventoID", eventoID) :
                new ObjectParameter("EventoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarPersonalPorEventoo_Result>("usp_ConsultarPersonalPorEventoo", eventoIDParameter);
        }
    
        public virtual ObjectResult<usp_ConsultarUsuario_Result> usp_ConsultarUsuario(string login_Usuario)
        {
            var login_UsuarioParameter = login_Usuario != null ?
                new ObjectParameter("Login_Usuario", login_Usuario) :
                new ObjectParameter("Login_Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ConsultarUsuario_Result>("usp_ConsultarUsuario", login_UsuarioParameter);
        }
    
        public virtual int usp_EliminarArtista(string nombre_artista)
        {
            var nombre_artistaParameter = nombre_artista != null ?
                new ObjectParameter("nombre_artista", nombre_artista) :
                new ObjectParameter("nombre_artista", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarArtista", nombre_artistaParameter);
        }
    
        public virtual int usp_EliminarCliente(Nullable<int> cliente_id)
        {
            var cliente_idParameter = cliente_id.HasValue ?
                new ObjectParameter("cliente_id", cliente_id) :
                new ObjectParameter("cliente_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarCliente", cliente_idParameter);
        }
    
        public virtual ObjectResult<string> usp_EliminarEvento(Nullable<int> evento_id)
        {
            var evento_idParameter = evento_id.HasValue ?
                new ObjectParameter("evento_id", evento_id) :
                new ObjectParameter("evento_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_EliminarEvento", evento_idParameter);
        }
    
        public virtual int usp_EliminarEventoPersonal(Nullable<int> p_evento_id, Nullable<int> p_personal_id)
        {
            var p_evento_idParameter = p_evento_id.HasValue ?
                new ObjectParameter("p_evento_id", p_evento_id) :
                new ObjectParameter("p_evento_id", typeof(int));
    
            var p_personal_idParameter = p_personal_id.HasValue ?
                new ObjectParameter("p_personal_id", p_personal_id) :
                new ObjectParameter("p_personal_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarEventoPersonal", p_evento_idParameter, p_personal_idParameter);
        }
    
        public virtual int usp_eliminarInvitadoPorID(Nullable<int> invitado_id)
        {
            var invitado_idParameter = invitado_id.HasValue ?
                new ObjectParameter("Invitado_id", invitado_id) :
                new ObjectParameter("Invitado_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_eliminarInvitadoPorID", invitado_idParameter);
        }
    
        public virtual int usp_EliminarPersonal(Nullable<int> personal_id)
        {
            var personal_idParameter = personal_id.HasValue ?
                new ObjectParameter("personal_id", personal_id) :
                new ObjectParameter("personal_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EliminarPersonal", personal_idParameter);
        }
    
        public virtual ObjectResult<string> usp_EliminarSala(Nullable<int> sala_id)
        {
            var sala_idParameter = sala_id.HasValue ?
                new ObjectParameter("sala_id", sala_id) :
                new ObjectParameter("sala_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_EliminarSala", sala_idParameter);
        }
    
        public virtual ObjectResult<usp_InsertarCliente_Result> usp_InsertarCliente(string nombre, string apellido, string correo_electronico, string direccion, string dni, string telefono, string creadoPor, Nullable<int> esEmpresa, string razonSocial, string rUC, Nullable<int> estado, string id_Ubigeo)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var correo_electronicoParameter = correo_electronico != null ?
                new ObjectParameter("correo_electronico", correo_electronico) :
                new ObjectParameter("correo_electronico", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var dniParameter = dni != null ?
                new ObjectParameter("Dni", dni) :
                new ObjectParameter("Dni", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var creadoPorParameter = creadoPor != null ?
                new ObjectParameter("CreadoPor", creadoPor) :
                new ObjectParameter("CreadoPor", typeof(string));
    
            var esEmpresaParameter = esEmpresa.HasValue ?
                new ObjectParameter("EsEmpresa", esEmpresa) :
                new ObjectParameter("EsEmpresa", typeof(int));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var rUCParameter = rUC != null ?
                new ObjectParameter("RUC", rUC) :
                new ObjectParameter("RUC", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var id_UbigeoParameter = id_Ubigeo != null ?
                new ObjectParameter("Id_Ubigeo", id_Ubigeo) :
                new ObjectParameter("Id_Ubigeo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_InsertarCliente_Result>("usp_InsertarCliente", nombreParameter, apellidoParameter, correo_electronicoParameter, direccionParameter, dniParameter, telefonoParameter, creadoPorParameter, esEmpresaParameter, razonSocialParameter, rUCParameter, estadoParameter, id_UbigeoParameter);
        }
    
        public virtual ObjectResult<string> usp_InsertarEvento(string nombre_evento, Nullable<System.DateTime> fecha_evento, Nullable<System.TimeSpan> hora_inicio, Nullable<System.TimeSpan> hora_finalizacion, Nullable<int> sala_id, Nullable<int> tipo_id, Nullable<int> estado, string creado_por)
        {
            var nombre_eventoParameter = nombre_evento != null ?
                new ObjectParameter("nombre_evento", nombre_evento) :
                new ObjectParameter("nombre_evento", typeof(string));
    
            var fecha_eventoParameter = fecha_evento.HasValue ?
                new ObjectParameter("fecha_evento", fecha_evento) :
                new ObjectParameter("fecha_evento", typeof(System.DateTime));
    
            var hora_inicioParameter = hora_inicio.HasValue ?
                new ObjectParameter("hora_inicio", hora_inicio) :
                new ObjectParameter("hora_inicio", typeof(System.TimeSpan));
    
            var hora_finalizacionParameter = hora_finalizacion.HasValue ?
                new ObjectParameter("hora_finalizacion", hora_finalizacion) :
                new ObjectParameter("hora_finalizacion", typeof(System.TimeSpan));
    
            var sala_idParameter = sala_id.HasValue ?
                new ObjectParameter("sala_id", sala_id) :
                new ObjectParameter("sala_id", typeof(int));
    
            var tipo_idParameter = tipo_id.HasValue ?
                new ObjectParameter("tipo_id", tipo_id) :
                new ObjectParameter("tipo_id", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var creado_porParameter = creado_por != null ?
                new ObjectParameter("creado_por", creado_por) :
                new ObjectParameter("creado_por", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_InsertarEvento", nombre_eventoParameter, fecha_eventoParameter, hora_inicioParameter, hora_finalizacionParameter, sala_idParameter, tipo_idParameter, estadoParameter, creado_porParameter);
        }
    
        public virtual int usp_InsertarEventoPersonal(string nombre, string apellido, string tipo_personal, string dni, Nullable<decimal> costo_hora)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var tipo_personalParameter = tipo_personal != null ?
                new ObjectParameter("tipo_personal", tipo_personal) :
                new ObjectParameter("tipo_personal", typeof(string));
    
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            var costo_horaParameter = costo_hora.HasValue ?
                new ObjectParameter("costo_hora", costo_hora) :
                new ObjectParameter("costo_hora", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarEventoPersonal", nombreParameter, apellidoParameter, tipo_personalParameter, dniParameter, costo_horaParameter);
        }
    
        public virtual int usp_InsertarInvitado(string nombre, string apellido, string dni)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarInvitado", nombreParameter, apellidoParameter, dniParameter);
        }
    
        public virtual int usp_InsertarPersonal(string nombre, string apellido, string dni, Nullable<decimal> costo_hora, byte[] foto, string telefono, string correo, Nullable<int> tipo, string actualizadoPor, string creadoPor, Nullable<int> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var dniParameter = dni != null ?
                new ObjectParameter("dni", dni) :
                new ObjectParameter("dni", typeof(string));
    
            var costo_horaParameter = costo_hora.HasValue ?
                new ObjectParameter("costo_hora", costo_hora) :
                new ObjectParameter("costo_hora", typeof(decimal));
    
            var fotoParameter = foto != null ?
                new ObjectParameter("Foto", foto) :
                new ObjectParameter("Foto", typeof(byte[]));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(int));
    
            var actualizadoPorParameter = actualizadoPor != null ?
                new ObjectParameter("ActualizadoPor", actualizadoPor) :
                new ObjectParameter("ActualizadoPor", typeof(string));
    
            var creadoPorParameter = creadoPor != null ?
                new ObjectParameter("CreadoPor", creadoPor) :
                new ObjectParameter("CreadoPor", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertarPersonal", nombreParameter, apellidoParameter, dniParameter, costo_horaParameter, fotoParameter, telefonoParameter, correoParameter, tipoParameter, actualizadoPorParameter, creadoPorParameter, estadoParameter);
        }
    
        public virtual ObjectResult<string> usp_InsertarSala(Nullable<int> capacidad, string direccion, Nullable<decimal> costo_sala)
        {
            var capacidadParameter = capacidad.HasValue ?
                new ObjectParameter("capacidad", capacidad) :
                new ObjectParameter("capacidad", typeof(int));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var costo_salaParameter = costo_sala.HasValue ?
                new ObjectParameter("costo_sala", costo_sala) :
                new ObjectParameter("costo_sala", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_InsertarSala", capacidadParameter, direccionParameter, costo_salaParameter);
        }
    
        public virtual ObjectResult<usp_listarArtista_Result> usp_listarArtista()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_listarArtista_Result>("usp_listarArtista");
        }
    
        public virtual ObjectResult<usp_ListarClientes_Result> usp_ListarClientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarClientes_Result>("usp_ListarClientes");
        }
    
        public virtual ObjectResult<usp_ListarEvento_Result> usp_ListarEvento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarEvento_Result>("usp_ListarEvento");
        }
    
        public virtual ObjectResult<usp_ListarPersonal_Result> usp_ListarPersonal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarPersonal_Result>("usp_ListarPersonal");
        }
    
        public virtual ObjectResult<usp_ListarSala_Result> usp_ListarSala()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarSala_Result>("usp_ListarSala");
        }
    
        public virtual ObjectResult<usp_ListarTipoDeEvento_Result> usp_ListarTipoDeEvento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ListarTipoDeEvento_Result>("usp_ListarTipoDeEvento");
        }
    
        public virtual ObjectResult<usp_NumeroEventosPorMes_Result> usp_NumeroEventosPorMes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NumeroEventosPorMes_Result>("usp_NumeroEventosPorMes");
        }
    
        public virtual int usp_RegistrarArtista(string nombre_artista, string genero_musical, Nullable<decimal> costo_hora)
        {
            var nombre_artistaParameter = nombre_artista != null ?
                new ObjectParameter("nombre_artista", nombre_artista) :
                new ObjectParameter("nombre_artista", typeof(string));
    
            var genero_musicalParameter = genero_musical != null ?
                new ObjectParameter("genero_musical", genero_musical) :
                new ObjectParameter("genero_musical", typeof(string));
    
            var costo_horaParameter = costo_hora.HasValue ?
                new ObjectParameter("costo_hora", costo_hora) :
                new ObjectParameter("costo_hora", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarArtista", nombre_artistaParameter, genero_musicalParameter, costo_horaParameter);
        }
    
        public virtual int usp_RegistrarEvento(string tipo_evento, Nullable<System.DateTime> fecha_evento, Nullable<System.TimeSpan> hora_inicio, Nullable<System.TimeSpan> hora_finalizacion, Nullable<int> sala_id)
        {
            var tipo_eventoParameter = tipo_evento != null ?
                new ObjectParameter("tipo_evento", tipo_evento) :
                new ObjectParameter("tipo_evento", typeof(string));
    
            var fecha_eventoParameter = fecha_evento.HasValue ?
                new ObjectParameter("fecha_evento", fecha_evento) :
                new ObjectParameter("fecha_evento", typeof(System.DateTime));
    
            var hora_inicioParameter = hora_inicio.HasValue ?
                new ObjectParameter("hora_inicio", hora_inicio) :
                new ObjectParameter("hora_inicio", typeof(System.TimeSpan));
    
            var hora_finalizacionParameter = hora_finalizacion.HasValue ?
                new ObjectParameter("hora_finalizacion", hora_finalizacion) :
                new ObjectParameter("hora_finalizacion", typeof(System.TimeSpan));
    
            var sala_idParameter = sala_id.HasValue ?
                new ObjectParameter("sala_id", sala_id) :
                new ObjectParameter("sala_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistrarEvento", tipo_eventoParameter, fecha_eventoParameter, hora_inicioParameter, hora_finalizacionParameter, sala_idParameter);
        }
    
        public virtual ObjectResult<usp_TiposDeEventosDelAno_Result> usp_TiposDeEventosDelAno()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TiposDeEventosDelAno_Result>("usp_TiposDeEventosDelAno");
        }
    
        public virtual ObjectResult<usp_Ubigeo_Departamentos_Result> usp_Ubigeo_Departamentos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Ubigeo_Departamentos_Result>("usp_Ubigeo_Departamentos");
        }
    
        public virtual ObjectResult<usp_Ubigeo_DistritosProvinciaDepartamento_Result> usp_Ubigeo_DistritosProvinciaDepartamento(string idDepartamento, string idProvincia)
        {
            var idDepartamentoParameter = idDepartamento != null ?
                new ObjectParameter("IdDepartamento", idDepartamento) :
                new ObjectParameter("IdDepartamento", typeof(string));
    
            var idProvinciaParameter = idProvincia != null ?
                new ObjectParameter("IdProvincia", idProvincia) :
                new ObjectParameter("IdProvincia", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Ubigeo_DistritosProvinciaDepartamento_Result>("usp_Ubigeo_DistritosProvinciaDepartamento", idDepartamentoParameter, idProvinciaParameter);
        }
    
        public virtual ObjectResult<usp_Ubigeo_ProvinciasDepartamento_Result> usp_Ubigeo_ProvinciasDepartamento(string idDepartamento)
        {
            var idDepartamentoParameter = idDepartamento != null ?
                new ObjectParameter("IdDepartamento", idDepartamento) :
                new ObjectParameter("IdDepartamento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Ubigeo_ProvinciasDepartamento_Result>("usp_Ubigeo_ProvinciasDepartamento", idDepartamentoParameter);
        }
    }
}
